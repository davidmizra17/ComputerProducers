/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package computerproducers;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintStream;
import static java.lang.Thread.MAX_PRIORITY;
import java.util.HashMap;
import javax.swing.JOptionPane;

/**
 *
 * @author juanm
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    private static final int MAX_AMOUNT = 18;
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToggleButton1 = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();
        startSimulation = new javax.swing.JButton();
        resetValues = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        RAMProducerDell = new javax.swing.JTextField();
        PlaqueDell = new javax.swing.JTextField();
        RAMDell = new javax.swing.JTextField();
        PowerSupplyDell = new javax.swing.JTextField();
        GraphicsCardDell = new javax.swing.JTextField();
        CPUDell = new javax.swing.JTextField();
        PlaqueCapacityDell = new javax.swing.JTextField();
        RAMCapacityDell = new javax.swing.JTextField();
        PowerSupplyCapacityDell = new javax.swing.JTextField();
        GraphicsCardCapacityDell = new javax.swing.JTextField();
        CPUCapacityDell = new javax.swing.JTextField();
        PlaqueHP = new javax.swing.JTextField();
        RAMHP = new javax.swing.JTextField();
        PowerSupplyHP = new javax.swing.JTextField();
        GraphicsCardHP = new javax.swing.JTextField();
        CPUHP = new javax.swing.JTextField();
        PlaqueCapacityHP = new javax.swing.JTextField();
        RAMCapacityHP = new javax.swing.JTextField();
        PowerSupplyCapacityHP = new javax.swing.JTextField();
        GraphicsCardCapacityHP = new javax.swing.JTextField();
        CPUCapacityHP = new javax.swing.JTextField();
        StandardComputerReadyHP = new javax.swing.JTextField();
        DaysLeft = new javax.swing.JTextField();
        GraphicsCardComputerReadyHP = new javax.swing.JTextField();
        StandardComputerReadyDell = new javax.swing.JTextField();
        GraphicsCardComputerReadyDell = new javax.swing.JTextField();
        DirectorActivityDell = new javax.swing.JTextField();
        PMFaultsDell = new javax.swing.JTextField();
        PMDiscountDell = new javax.swing.JTextField();
        PMActivityDell = new javax.swing.JTextField();
        decreasePlaqueDELL = new javax.swing.JButton();
        decreaseCpuDELL = new javax.swing.JButton();
        increasePlaqueDELL = new javax.swing.JButton();
        increaseCpuDELL = new javax.swing.JButton();
        increaseRamDELL = new javax.swing.JButton();
        decreaseRamDELL = new javax.swing.JButton();
        increaseGraphicsDELL = new javax.swing.JButton();
        decreaseGraphicsDELL = new javax.swing.JButton();
        increaseAssemblerDELL = new javax.swing.JButton();
        decreaseAssemblerDELL = new javax.swing.JButton();
        increasePowerSupplyDELL = new javax.swing.JButton();
        decreasePowerSupplyDELL = new javax.swing.JButton();
        AssemblerDell = new javax.swing.JTextField();
        PowerSupplyProducerDell = new javax.swing.JTextField();
        GraphicsCardProducerDell = new javax.swing.JTextField();
        PlaqueProducerDell = new javax.swing.JTextField();
        CPUProducerDell = new javax.swing.JTextField();
        RAMProducerHP = new javax.swing.JTextField();
        decreasePlaqueHP = new javax.swing.JButton();
        decreaseCpuHP = new javax.swing.JButton();
        increasePlaqueHP = new javax.swing.JButton();
        increaseCpuHP = new javax.swing.JButton();
        increaseRamHP = new javax.swing.JButton();
        decreaseRamHP = new javax.swing.JButton();
        increaseGraphicsHP = new javax.swing.JButton();
        decreaseGraphicsHP = new javax.swing.JButton();
        increaseAssemblerHP = new javax.swing.JButton();
        decreaseAssemblerHP = new javax.swing.JButton();
        increasePowerSupplyHP = new javax.swing.JButton();
        decreasePowerSupplyHP = new javax.swing.JButton();
        AssemblerHP = new javax.swing.JTextField();
        PowerSupplyProducerHP = new javax.swing.JTextField();
        GraphicsCardProducerHP = new javax.swing.JTextField();
        PlaqueProducerHP = new javax.swing.JTextField();
        CPUProducerHP = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        DirectorActivityHP = new javax.swing.JTextField();
        PMFaultsHP = new javax.swing.JTextField();
        PMDiscountHP = new javax.swing.JTextField();
        PMActivityHP = new javax.swing.JTextField();
        jLabel53 = new javax.swing.JLabel();
        jScrollBar1 = new javax.swing.JScrollBar();

        jToggleButton1.setText("jToggleButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("PRODUCTORES DE COMPUTADORAS");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 10, -1, 30));

        startSimulation.setText("INICIAR SIMULACIÓN");
        startSimulation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startSimulationActionPerformed(evt);
            }
        });
        getContentPane().add(startSimulation, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 40, -1, -1));

        resetValues.setText("Colocar nuevos valores");
        resetValues.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetValuesActionPerformed(evt);
            }
        });
        getContentPane().add(resetValues, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 80, -1, -1));

        jLabel2.setText("DELL");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 20, 40, 20));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("TARJETAS GRÁFICAS");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 250, 140, -1));

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("PLACA BASE");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 140, -1));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("CPU");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 140, -1));

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("MEMORIA RAM");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, 140, -1));

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("FUENTE DE ALIMENTACIÓN");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 200, 140, -1));

        jLabel8.setText("MAX");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 360, 30, 20));

        jLabel9.setText("PROJECT MANAGER");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 590, 130, 20));

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("ENSAMBLADORES");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, 140, -1));

        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("TARJETAS GRÁFICAS");
        getContentPane().add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 460, 140, -1));

        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("PLACA BASE");
        getContentPane().add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 380, 140, -1));

        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("CPU");
        getContentPane().add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 400, 140, -1));

        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("MEMORIA RAM");
        getContentPane().add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 420, 140, -1));

        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("FUENTE DE ALIMENTACIÓN");
        getContentPane().add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 440, 140, -1));

        jLabel11.setText("PRODUCTORES");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 170, 100, 20));

        jLabel12.setText("HP");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 20, 30, 20));

        jLabel24.setText("MAX");
        getContentPane().add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 360, 30, 20));

        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("TARJETAS GRÁFICAS");
        getContentPane().add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 460, 140, -1));

        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setText("PLACA BASE");
        getContentPane().add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 380, 140, -1));

        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel27.setText("CPU");
        getContentPane().add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 400, 140, -1));

        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel28.setText("MEMORIA RAM");
        getContentPane().add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 420, 140, -1));

        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel29.setText("FUENTE DE ALIMENTACIÓN");
        getContentPane().add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 440, 140, -1));

        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel31.setText("TARJETAS GRÁFICAS");
        getContentPane().add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 560, 140, -1));

        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel32.setText("ESTÁNDAR");
        getContentPane().add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 540, 140, -1));

        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel33.setText("TARJETAS GRÁFICAS");
        getContentPane().add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 560, 140, -1));

        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel34.setText("ESTÁNDAR");
        getContentPane().add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 540, 140, -1));

        jLabel35.setText("DÍAS FALTANTES PARA LA ENTREGA");
        getContentPane().add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 380, 190, 20));

        jLabel36.setText("COMPUTADORAS LISTAS");
        getContentPane().add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 500, 130, 20));

        jLabel37.setText("DIRECTOR");
        getContentPane().add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 730, 130, 20));

        jLabel38.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel38.setText("DESCUENTO");
        getContentPane().add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 660, 140, -1));

        jLabel39.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel39.setText("ACTIVIDAD");
        getContentPane().add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 760, 140, -1));

        jLabel40.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel40.setText("FALTAS");
        getContentPane().add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 640, 140, -1));

        jLabel42.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel42.setText("ACTIVIDAD");
        getContentPane().add(jLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 620, 140, -1));

        RAMProducerDell.setEditable(false);
        RAMProducerDell.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        RAMProducerDell.setText("0");
        RAMProducerDell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RAMProducerDellActionPerformed(evt);
            }
        });
        getContentPane().add(RAMProducerDell, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 150, 50, 40));

        PlaqueDell.setEditable(false);
        PlaqueDell.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        PlaqueDell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlaqueDellActionPerformed(evt);
            }
        });
        getContentPane().add(PlaqueDell, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 380, 30, -1));

        RAMDell.setEditable(false);
        RAMDell.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        RAMDell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RAMDellActionPerformed(evt);
            }
        });
        getContentPane().add(RAMDell, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 420, 30, -1));

        PowerSupplyDell.setEditable(false);
        PowerSupplyDell.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        PowerSupplyDell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PowerSupplyDellActionPerformed(evt);
            }
        });
        getContentPane().add(PowerSupplyDell, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 440, 30, -1));

        GraphicsCardDell.setEditable(false);
        GraphicsCardDell.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        GraphicsCardDell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GraphicsCardDellActionPerformed(evt);
            }
        });
        getContentPane().add(GraphicsCardDell, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 460, 30, -1));

        CPUDell.setEditable(false);
        CPUDell.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CPUDell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CPUDellActionPerformed(evt);
            }
        });
        getContentPane().add(CPUDell, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 400, 30, -1));

        PlaqueCapacityDell.setEditable(false);
        PlaqueCapacityDell.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        PlaqueCapacityDell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlaqueCapacityDellActionPerformed(evt);
            }
        });
        getContentPane().add(PlaqueCapacityDell, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 380, 30, -1));

        RAMCapacityDell.setEditable(false);
        RAMCapacityDell.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        RAMCapacityDell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RAMCapacityDellActionPerformed(evt);
            }
        });
        getContentPane().add(RAMCapacityDell, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 420, 30, -1));

        PowerSupplyCapacityDell.setEditable(false);
        PowerSupplyCapacityDell.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        PowerSupplyCapacityDell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PowerSupplyCapacityDellActionPerformed(evt);
            }
        });
        getContentPane().add(PowerSupplyCapacityDell, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 440, 30, -1));

        GraphicsCardCapacityDell.setEditable(false);
        GraphicsCardCapacityDell.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        GraphicsCardCapacityDell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GraphicsCardCapacityDellActionPerformed(evt);
            }
        });
        getContentPane().add(GraphicsCardCapacityDell, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 460, 30, -1));

        CPUCapacityDell.setEditable(false);
        CPUCapacityDell.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CPUCapacityDell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CPUCapacityDellActionPerformed(evt);
            }
        });
        getContentPane().add(CPUCapacityDell, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 400, 30, -1));

        PlaqueHP.setEditable(false);
        PlaqueHP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        PlaqueHP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlaqueHPActionPerformed(evt);
            }
        });
        getContentPane().add(PlaqueHP, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 380, 30, -1));

        RAMHP.setEditable(false);
        RAMHP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        RAMHP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RAMHPActionPerformed(evt);
            }
        });
        getContentPane().add(RAMHP, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 420, 30, -1));

        PowerSupplyHP.setEditable(false);
        PowerSupplyHP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        PowerSupplyHP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PowerSupplyHPActionPerformed(evt);
            }
        });
        getContentPane().add(PowerSupplyHP, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 440, 30, -1));

        GraphicsCardHP.setEditable(false);
        GraphicsCardHP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        GraphicsCardHP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GraphicsCardHPActionPerformed(evt);
            }
        });
        getContentPane().add(GraphicsCardHP, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 460, 30, -1));

        CPUHP.setEditable(false);
        CPUHP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CPUHP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CPUHPActionPerformed(evt);
            }
        });
        getContentPane().add(CPUHP, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 400, 30, -1));

        PlaqueCapacityHP.setEditable(false);
        PlaqueCapacityHP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        PlaqueCapacityHP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlaqueCapacityHPActionPerformed(evt);
            }
        });
        getContentPane().add(PlaqueCapacityHP, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 380, 30, -1));

        RAMCapacityHP.setEditable(false);
        RAMCapacityHP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        RAMCapacityHP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RAMCapacityHPActionPerformed(evt);
            }
        });
        getContentPane().add(RAMCapacityHP, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 420, 30, -1));

        PowerSupplyCapacityHP.setEditable(false);
        PowerSupplyCapacityHP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        PowerSupplyCapacityHP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PowerSupplyCapacityHPActionPerformed(evt);
            }
        });
        getContentPane().add(PowerSupplyCapacityHP, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 440, 30, -1));

        GraphicsCardCapacityHP.setEditable(false);
        GraphicsCardCapacityHP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        GraphicsCardCapacityHP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GraphicsCardCapacityHPActionPerformed(evt);
            }
        });
        getContentPane().add(GraphicsCardCapacityHP, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 460, 30, -1));

        CPUCapacityHP.setEditable(false);
        CPUCapacityHP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CPUCapacityHP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CPUCapacityHPActionPerformed(evt);
            }
        });
        getContentPane().add(CPUCapacityHP, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 400, 30, -1));

        StandardComputerReadyHP.setEditable(false);
        StandardComputerReadyHP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        StandardComputerReadyHP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StandardComputerReadyHPActionPerformed(evt);
            }
        });
        getContentPane().add(StandardComputerReadyHP, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 540, 30, -1));

        DaysLeft.setEditable(false);
        DaysLeft.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        DaysLeft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DaysLeftActionPerformed(evt);
            }
        });
        getContentPane().add(DaysLeft, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 410, 50, 40));

        GraphicsCardComputerReadyHP.setEditable(false);
        GraphicsCardComputerReadyHP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        GraphicsCardComputerReadyHP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GraphicsCardComputerReadyHPActionPerformed(evt);
            }
        });
        getContentPane().add(GraphicsCardComputerReadyHP, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 560, 30, -1));

        StandardComputerReadyDell.setEditable(false);
        StandardComputerReadyDell.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        StandardComputerReadyDell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StandardComputerReadyDellActionPerformed(evt);
            }
        });
        getContentPane().add(StandardComputerReadyDell, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 540, 70, -1));

        GraphicsCardComputerReadyDell.setEditable(false);
        GraphicsCardComputerReadyDell.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        GraphicsCardComputerReadyDell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GraphicsCardComputerReadyDellActionPerformed(evt);
            }
        });
        getContentPane().add(GraphicsCardComputerReadyDell, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 560, 70, -1));

        DirectorActivityDell.setEditable(false);
        DirectorActivityDell.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        DirectorActivityDell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DirectorActivityDellActionPerformed(evt);
            }
        });
        getContentPane().add(DirectorActivityDell, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 760, 280, -1));

        PMFaultsDell.setEditable(false);
        PMFaultsDell.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        PMFaultsDell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PMFaultsDellActionPerformed(evt);
            }
        });
        getContentPane().add(PMFaultsDell, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 640, 80, -1));

        PMDiscountDell.setEditable(false);
        PMDiscountDell.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        PMDiscountDell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PMDiscountDellActionPerformed(evt);
            }
        });
        getContentPane().add(PMDiscountDell, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 660, 80, -1));

        PMActivityDell.setEditable(false);
        PMActivityDell.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        PMActivityDell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PMActivityDellActionPerformed(evt);
            }
        });
        getContentPane().add(PMActivityDell, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 620, 210, -1));

        decreasePlaqueDELL.setText("-");
        decreasePlaqueDELL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decreasePlaqueDELLActionPerformed(evt);
            }
        });
        getContentPane().add(decreasePlaqueDELL, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 70, -1, -1));

        decreaseCpuDELL.setText("-");
        decreaseCpuDELL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decreaseCpuDELLActionPerformed(evt);
            }
        });
        getContentPane().add(decreaseCpuDELL, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 110, 40, -1));

        increasePlaqueDELL.setText("+");
        increasePlaqueDELL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                increasePlaqueDELLActionPerformed(evt);
            }
        });
        getContentPane().add(increasePlaqueDELL, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 70, 40, 30));

        increaseCpuDELL.setText("+");
        increaseCpuDELL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                increaseCpuDELLActionPerformed(evt);
            }
        });
        getContentPane().add(increaseCpuDELL, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 110, -1, -1));

        increaseRamDELL.setText("+");
        increaseRamDELL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                increaseRamDELLActionPerformed(evt);
            }
        });
        getContentPane().add(increaseRamDELL, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 150, -1, -1));

        decreaseRamDELL.setText("-");
        decreaseRamDELL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decreaseRamDELLActionPerformed(evt);
            }
        });
        getContentPane().add(decreaseRamDELL, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 150, 40, -1));

        increaseGraphicsDELL.setText("+");
        increaseGraphicsDELL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                increaseGraphicsDELLActionPerformed(evt);
            }
        });
        getContentPane().add(increaseGraphicsDELL, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 230, -1, -1));

        decreaseGraphicsDELL.setText("-");
        decreaseGraphicsDELL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decreaseGraphicsDELLActionPerformed(evt);
            }
        });
        getContentPane().add(decreaseGraphicsDELL, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 240, -1, -1));

        increaseAssemblerDELL.setText("+");
        increaseAssemblerDELL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                increaseAssemblerDELLActionPerformed(evt);
            }
        });
        getContentPane().add(increaseAssemblerDELL, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 270, -1, -1));

        decreaseAssemblerDELL.setText("-");
        decreaseAssemblerDELL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decreaseAssemblerDELLActionPerformed(evt);
            }
        });
        getContentPane().add(decreaseAssemblerDELL, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 280, -1, -1));

        increasePowerSupplyDELL.setText("+");
        increasePowerSupplyDELL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                increasePowerSupplyDELLActionPerformed(evt);
            }
        });
        getContentPane().add(increasePowerSupplyDELL, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 190, -1, 30));

        decreasePowerSupplyDELL.setText("-");
        decreasePowerSupplyDELL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decreasePowerSupplyDELLActionPerformed(evt);
            }
        });
        getContentPane().add(decreasePowerSupplyDELL, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 190, -1, -1));

        AssemblerDell.setEditable(false);
        AssemblerDell.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        AssemblerDell.setText("0");
        AssemblerDell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AssemblerDellActionPerformed(evt);
            }
        });
        getContentPane().add(AssemblerDell, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 270, 50, 40));

        PowerSupplyProducerDell.setEditable(false);
        PowerSupplyProducerDell.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        PowerSupplyProducerDell.setText("0");
        PowerSupplyProducerDell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PowerSupplyProducerDellActionPerformed(evt);
            }
        });
        getContentPane().add(PowerSupplyProducerDell, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 190, 50, 40));

        GraphicsCardProducerDell.setEditable(false);
        GraphicsCardProducerDell.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        GraphicsCardProducerDell.setText("0");
        GraphicsCardProducerDell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GraphicsCardProducerDellActionPerformed(evt);
            }
        });
        getContentPane().add(GraphicsCardProducerDell, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 230, 50, 40));

        PlaqueProducerDell.setEditable(false);
        PlaqueProducerDell.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        PlaqueProducerDell.setText("0");
        PlaqueProducerDell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlaqueProducerDellActionPerformed(evt);
            }
        });
        getContentPane().add(PlaqueProducerDell, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 70, 50, 40));

        CPUProducerDell.setEditable(false);
        CPUProducerDell.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CPUProducerDell.setText("0");
        CPUProducerDell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CPUProducerDellActionPerformed(evt);
            }
        });
        getContentPane().add(CPUProducerDell, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 110, 50, 40));

        RAMProducerHP.setEditable(false);
        RAMProducerHP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        RAMProducerHP.setText("0");
        RAMProducerHP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RAMProducerHPActionPerformed(evt);
            }
        });
        getContentPane().add(RAMProducerHP, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 140, 50, 40));

        decreasePlaqueHP.setText("-");
        decreasePlaqueHP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decreasePlaqueHPActionPerformed(evt);
            }
        });
        getContentPane().add(decreasePlaqueHP, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 60, -1, -1));

        decreaseCpuHP.setText("-");
        decreaseCpuHP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decreaseCpuHPActionPerformed(evt);
            }
        });
        getContentPane().add(decreaseCpuHP, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 100, 40, -1));

        increasePlaqueHP.setText("+");
        increasePlaqueHP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                increasePlaqueHPActionPerformed(evt);
            }
        });
        getContentPane().add(increasePlaqueHP, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 60, 40, 30));

        increaseCpuHP.setText("+");
        increaseCpuHP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                increaseCpuHPActionPerformed(evt);
            }
        });
        getContentPane().add(increaseCpuHP, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 100, -1, -1));

        increaseRamHP.setText("+");
        increaseRamHP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                increaseRamHPActionPerformed(evt);
            }
        });
        getContentPane().add(increaseRamHP, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 140, -1, -1));

        decreaseRamHP.setText("-");
        decreaseRamHP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decreaseRamHPActionPerformed(evt);
            }
        });
        getContentPane().add(decreaseRamHP, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 140, 40, -1));

        increaseGraphicsHP.setText("+");
        increaseGraphicsHP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                increaseGraphicsHPActionPerformed(evt);
            }
        });
        getContentPane().add(increaseGraphicsHP, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 220, -1, -1));

        decreaseGraphicsHP.setText("-");
        decreaseGraphicsHP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decreaseGraphicsHPActionPerformed(evt);
            }
        });
        getContentPane().add(decreaseGraphicsHP, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 230, -1, -1));

        increaseAssemblerHP.setText("+");
        increaseAssemblerHP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                increaseAssemblerHPActionPerformed(evt);
            }
        });
        getContentPane().add(increaseAssemblerHP, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 260, -1, -1));

        decreaseAssemblerHP.setText("-");
        decreaseAssemblerHP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decreaseAssemblerHPActionPerformed(evt);
            }
        });
        getContentPane().add(decreaseAssemblerHP, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 270, -1, -1));

        increasePowerSupplyHP.setText("+");
        increasePowerSupplyHP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                increasePowerSupplyHPActionPerformed(evt);
            }
        });
        getContentPane().add(increasePowerSupplyHP, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 180, -1, 30));

        decreasePowerSupplyHP.setText("-");
        decreasePowerSupplyHP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decreasePowerSupplyHPActionPerformed(evt);
            }
        });
        getContentPane().add(decreasePowerSupplyHP, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 180, -1, -1));

        AssemblerHP.setEditable(false);
        AssemblerHP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        AssemblerHP.setText("0");
        AssemblerHP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AssemblerHPActionPerformed(evt);
            }
        });
        getContentPane().add(AssemblerHP, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 260, 50, 40));

        PowerSupplyProducerHP.setEditable(false);
        PowerSupplyProducerHP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        PowerSupplyProducerHP.setText("0");
        PowerSupplyProducerHP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PowerSupplyProducerHPActionPerformed(evt);
            }
        });
        getContentPane().add(PowerSupplyProducerHP, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 180, 50, 40));

        GraphicsCardProducerHP.setEditable(false);
        GraphicsCardProducerHP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        GraphicsCardProducerHP.setText("0");
        GraphicsCardProducerHP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GraphicsCardProducerHPActionPerformed(evt);
            }
        });
        getContentPane().add(GraphicsCardProducerHP, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 220, 50, 40));

        PlaqueProducerHP.setEditable(false);
        PlaqueProducerHP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        PlaqueProducerHP.setText("0");
        PlaqueProducerHP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlaqueProducerHPActionPerformed(evt);
            }
        });
        getContentPane().add(PlaqueProducerHP, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 60, 50, 40));

        CPUProducerHP.setEditable(false);
        CPUProducerHP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CPUProducerHP.setText("0");
        CPUProducerHP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CPUProducerHPActionPerformed(evt);
            }
        });
        getContentPane().add(CPUProducerHP, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 100, 50, 40));

        jLabel41.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel41.setText("TARJETAS GRÁFICAS");
        getContentPane().add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 240, 140, -1));

        jLabel43.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel43.setText("PLACA BASE");
        getContentPane().add(jLabel43, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 70, 140, -1));

        jLabel44.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel44.setText("CPU");
        getContentPane().add(jLabel44, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 110, 140, -1));

        jLabel45.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel45.setText("MEMORIA RAM");
        getContentPane().add(jLabel45, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 150, 140, -1));

        jLabel46.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel46.setText("FUENTE DE ALIMENTACIÓN");
        getContentPane().add(jLabel46, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 190, 140, -1));

        jLabel47.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel47.setText("ENSAMBLADORES");
        getContentPane().add(jLabel47, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 280, 140, -1));

        jLabel13.setText("PROJECT MANAGER");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 590, 130, 20));

        jLabel48.setText("DIRECTOR");
        getContentPane().add(jLabel48, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 730, 130, 20));

        jLabel49.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel49.setText("DESCUENTO");
        getContentPane().add(jLabel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 660, 140, -1));

        jLabel50.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel50.setText("ACTIVIDAD");
        getContentPane().add(jLabel50, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 760, 140, -1));

        jLabel51.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel51.setText("FALTAS");
        getContentPane().add(jLabel51, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 640, 140, -1));

        jLabel52.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel52.setText("ACTIVIDAD");
        getContentPane().add(jLabel52, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 620, 140, -1));

        DirectorActivityHP.setEditable(false);
        DirectorActivityHP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        DirectorActivityHP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DirectorActivityHPActionPerformed(evt);
            }
        });
        getContentPane().add(DirectorActivityHP, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 760, 230, -1));

        PMFaultsHP.setEditable(false);
        PMFaultsHP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        PMFaultsHP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PMFaultsHPActionPerformed(evt);
            }
        });
        getContentPane().add(PMFaultsHP, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 640, 80, -1));

        PMDiscountHP.setEditable(false);
        PMDiscountHP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        PMDiscountHP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PMDiscountHPActionPerformed(evt);
            }
        });
        getContentPane().add(PMDiscountHP, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 660, 80, -1));

        PMActivityHP.setEditable(false);
        PMActivityHP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        PMActivityHP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PMActivityHPActionPerformed(evt);
            }
        });
        getContentPane().add(PMActivityHP, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 620, 210, -1));

        jLabel53.setText("COMPUTADORAS LISTAS");
        getContentPane().add(jLabel53, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 500, 130, 20));
        getContentPane().add(jScrollBar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1200, 10, -1, 950));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startSimulationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startSimulationActionPerformed
        // TODO add your handling code here:
        
        //REVISAR LA ASIGNACION DE LOS TIEMPOS DE SLEEP PARA CADA HILO
        
        writeOnFile();
        readFile();

        
    }//GEN-LAST:event_startSimulationActionPerformed
    
    private void initializeDELLWorkers(HashMap<String, Integer> valoresProductores){
        try {
        // Try to parse the input as a double or integer
        int amount_of_plaque_producers = valoresProductores.get("placasDELL");
        int amount_of_graphicCard_producers = valoresProductores.get("tarjetasDELL");
        int amount_of_powerSupply_producers = valoresProductores.get("fuenteDELL");
        int amount_of_ram_producers = valoresProductores.get("ramDELL");
        int amount_of_cpu_producers = valoresProductores.get("cpuDELL");
        int amount_of_assemblers = valoresProductores.get("ensambladoresDELL");
        
        int total_workers = amount_of_plaque_producers + amount_of_graphicCard_producers + amount_of_powerSupply_producers + amount_of_ram_producers + amount_of_cpu_producers;
        
        if (amount_of_plaque_producers > 0 && total_workers <= MAX_AMOUNT) {
            for (int i = 0; i < amount_of_plaque_producers; i++) {
                PlaqueProducer worker = new PlaqueProducer(25, 500, PlaqueDell);
                worker.start();
                PlaqueCapacityDell.setText(Integer.toString(worker.getStore_capacity()));
//                PlaqueDell.setText(Integer.toString(worker.store_counter));
            }
            
            
            for (int i = 0; i < amount_of_graphicCard_producers; i++) {
                GraphicsCardProducer worker = new GraphicsCardProducer(25, 500, GraphicsCardDell);
                worker.start();
                GraphicsCardCapacityDell.setText(Integer.toString(worker.getStore_capacity()));
//                GraphicsCardDell.setText(Integer.toString(worker.store_counter));
            }
            
            for (int i = 0; i < amount_of_powerSupply_producers; i++) {
                PowerSupplyProducer worker = new PowerSupplyProducer(25, 500, PowerSupplyDell);
                worker.start();
                PowerSupplyCapacityDell.setText(Integer.toString(worker.getStore_capacity()));
//                PowerSupplyDell.setText(Integer.toString(worker.store_counter));
            }
            
            for (int i = 0; i < amount_of_ram_producers; i++) {
                RAMProducer worker = new RAMProducer(25, 500, RAMDell);
                worker.start();
                RAMCapacityDell.setText(Integer.toString(worker.getStore_capacity()));
//                RAMDell.setText(Integer.toString(worker.getStoreCounter()));
            }
            
            for (int i = 0; i < amount_of_cpu_producers; i++) {
                CPUProducer worker = new CPUProducer(25, 500, CPUDell);
                worker.start();
                CPUCapacityDell.setText(Integer.toString(worker.getStore_capacity()));
//                CPUDell.setText(Integer.toString(worker.store_counter));
            }
            
            for (int i = 0; i < amount_of_assemblers; i++) {
                Assembler assemblerDell = new Assembler(50, 700, 6, 5, 3, 1, 5, 3, 1, StandardComputerReadyDell, GraphicsCardComputerReadyDell);
//                assemblerDell.setPriority(MAX_PRIORITY);
                assemblerDell.start();
                
            }
            
            ProjectManager dell_pm = new ProjectManager(5, 550, PMActivityDell);
            dell_pm.start();
            Director dell_director = new Director(dell_pm,10,PMDiscountDell,PMFaultsDell,DaysLeft,DirectorActivityDell);
            dell_director.start();
            
         }else if (amount_of_plaque_producers <= 0){
            JOptionPane.showMessageDialog(rootPane, "ERROR: Debe ingresar un número positivo.");
        }else{
            JOptionPane.showMessageDialog(rootPane, "ERROR: La cantidad de trabajadores ingresados no debe exceder de 18."); 
         }
        
         // If it parses without throwing an exception, it's numeric
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(rootPane, "ERROR: La cantidad de trabajadores debe ser un número entero."); 
    }
    }
    private void readFile(){
        
        HashMap<String, Integer> valoresProductores = new HashMap<>();

        try {
            BufferedReader br = new BufferedReader(new FileReader("valores.txt"));
            String linea;
            while ((linea = br.readLine()) != null) {
                // Separar la línea en "clave: valor"
                String[] partes = linea.split(": ");
                if (partes.length == 2) {
                    String componente = partes[0].trim(); // "placaHP" o "cpuDELL"
                    int valor = Integer.parseInt(partes[1].trim()); // el valor numérico

                    // Guardar en el mapa
                    valoresProductores.put(componente, valor);
                }
            }
            
            
            System.out.println(valoresProductores);
            br.close();
        initializeDELLWorkers(valoresProductores);
        initializeHPWorkers(valoresProductores);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    private void writeOnFile() {
        
        try (BufferedWriter writer = new BufferedWriter(new FileWriter("valores.txt"))) {
            // Escribe los valores de Dell
            writer.write("placasDELL: " + PlaqueProducerDell.getText() + "\n");
            writer.write("cpuDELL: " + CPUProducerDell.getText() + "\n");
            writer.write("ramDELL: " + RAMProducerDell.getText() + "\n");
            writer.write("fuenteDELL: " + PowerSupplyProducerDell.getText() + "\n");
            writer.write("tarjetasDELL: " + GraphicsCardProducerDell.getText() + "\n");
            writer.write("ensambladoresDELL: " + AssemblerDell.getText() + "\n");

            // Escribe los valores de HP
            writer.write("placasHP: " + PlaqueProducerHP.getText() + "\n");
            writer.write("cpuHP: " + CPUProducerHP.getText() + "\n");
            writer.write("ramHP: " + RAMProducerHP.getText() + "\n");
            writer.write("fuenteHP: " + PowerSupplyProducerHP.getText() + "\n");
            writer.write("tarjetasHP: " + GraphicsCardProducerHP.getText() + "\n");
            writer.write("ensambladoresHP: " + AssemblerHP.getText() + "\n");
            
        } catch (IOException e) {
            e.printStackTrace();
        }
    
    }
    
    private void initializeHPWorkers(HashMap<String, Integer> valoresProductores){
        try {
        // Try to parse the input as a double or integer
        int amount_of_plaque_producers = valoresProductores.get("placasHP");
        int amount_of_graphicCard_producers = valoresProductores.get("tarjetasHP");
        int amount_of_powerSupply_producers = valoresProductores.get("fuenteHP");
        int amount_of_ram_producers = valoresProductores.get("ramHP");
        int amount_of_cpu_producers = valoresProductores.get("cpuHP");
        int amount_of_assemblers = valoresProductores.get("ensambladoresHP");
        
        if (amount_of_plaque_producers > 0) {
            for (int i = 0; i < amount_of_plaque_producers; i++) {
                PlaqueProducer worker = new PlaqueProducer(25, 500, PlaqueHP);
                worker.start();
                PlaqueCapacityHP.setText(Integer.toString(worker.getStore_capacity()));
//                PlaqueHP.setText(Integer.toString(worker.store_counter));
            }
            
            for (int i = 0; i < amount_of_graphicCard_producers; i++) {
                GraphicsCardProducer worker = new GraphicsCardProducer(25, 500, GraphicsCardHP);
                worker.start();
                GraphicsCardCapacityHP.setText(Integer.toString(worker.getStore_capacity()));
//                GraphicsCardHP.setText(Integer.toString(worker.store_counter));
            }
            
            for (int i = 0; i < amount_of_powerSupply_producers; i++) {
                PowerSupplyProducer worker = new PowerSupplyProducer(25, 500, PowerSupplyHP);
                worker.start();
                PowerSupplyCapacityHP.setText(Integer.toString(worker.getStore_capacity()));
//                PowerSupplyHP.setText(Integer.toString(worker.store_counter));
            }
            
            for (int i = 0; i < amount_of_ram_producers; i++) {
                RAMProducer worker = new RAMProducer(25, 500, RAMHP);
                worker.start();
                RAMCapacityHP.setText(Integer.toString(worker.getStore_capacity()));
//                RAMHP.setText(Integer.toString(worker.getStoreCounter()));
            }
            
            for (int i = 0; i < amount_of_cpu_producers; i++) {
                CPUProducer worker = new CPUProducer(25, 500, CPUHP);
                worker.start();
                CPUCapacityHP.setText(Integer.toString(worker.getStore_capacity()));
//                CPUHP.setText(Integer.toString(worker.store_counter));
            }
            
            for (int i = 0; i < amount_of_assemblers; i++) {
                Assembler assemblerHP = new Assembler(50, 2000, 2, 1, 3, 1, 4, 2, 3, StandardComputerReadyHP, GraphicsCardComputerReadyHP);
//                assemblerHP.setPriority(MAX_PRIORITY);
                assemblerHP.start();
            }
            
            ProjectManager hp_pm = new ProjectManager(5, 550, PMActivityHP);
            hp_pm.start();
            
            Director hp_director = new Director(hp_pm,10,PMDiscountHP,PMFaultsHP,DaysLeft,DirectorActivityHP);
            hp_director.start();
            
         }else{
            JOptionPane.showMessageDialog(rootPane, "ERROR: Debe ingresar un número positivo.");
        }
        
         // If it parses without throwing an exception, it's numeric
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(rootPane, "ERROR: La cantidad de trabajadores debe ser un número entero."); 
    }
    }
    
    private void resetValuesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetValuesActionPerformed
        // TODO add your handling code here:
        int inputDuracionDias = Integer.parseInt(JOptionPane.showInputDialog(null, "Ingrese el tiempo que dura un dia en segundos: "));
        int inputCantidadDias = Integer.parseInt(JOptionPane.showInputDialog(null, "Ingrese la cantidad de dias entre las entregas de las computadoras a las distribuidoras: "));
        
//      Dell
        int inputPlaqueProducersDell = Integer.parseInt(JOptionPane.showInputDialog(null, "Cantidad de productores de placa base de Dell: "));
        int inputCPUProducersDell = Integer.parseInt(JOptionPane.showInputDialog(null, "Cantidad de productores de CPU de Dell: "));
        int inputRAMProducersDell = Integer.parseInt(JOptionPane.showInputDialog(null, "Cantidad de productores de RAM de Dell: "));
        int inputPowerSupplyProducersDell = Integer.parseInt(JOptionPane.showInputDialog(null, "Cantidad de productores de fuentes de alimentacion de Dell: "));
        int inputGaphicsCardProducersDell = Integer.parseInt(JOptionPane.showInputDialog(null, "Cantidad de productores de tarjetas graficas de Dell: "));
        int inputAssemblersDell = Integer.parseInt(JOptionPane.showInputDialog(null, "Cantidad de ensambladores de Dell: "));
        
//      HP
        int inputPlaqueProducersHP = Integer.parseInt(JOptionPane.showInputDialog(null, "Cantidad de productores de placa base de HP: "));
        int inputCPUProducersHP = Integer.parseInt(JOptionPane.showInputDialog(null, "Cantidad de productores de CPU de HP: "));
        int inputRAMProducersHP = Integer.parseInt(JOptionPane.showInputDialog(null, "Cantidad de productores de RAM de HP: "));
        int inputPowerSupplyProducersHP = Integer.parseInt(JOptionPane.showInputDialog(null, "Cantidad de productores de fuentes de alimentacion de HP: "));
        int inputGaphicsCardProducersHP = Integer.parseInt(JOptionPane.showInputDialog(null, "Cantidad de productores de tarjetas graficas de HP: "));
        int inputAssemblersHP = Integer.parseInt(JOptionPane.showInputDialog(null, "Cantidad de ensambladores de HP: "));

    
    }//GEN-LAST:event_resetValuesActionPerformed

    private void RAMProducerDellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RAMProducerDellActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RAMProducerDellActionPerformed

    private void PlaqueDellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlaqueDellActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PlaqueDellActionPerformed

    private void RAMDellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RAMDellActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RAMDellActionPerformed

    private void PowerSupplyDellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PowerSupplyDellActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PowerSupplyDellActionPerformed

    private void GraphicsCardDellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GraphicsCardDellActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GraphicsCardDellActionPerformed

    private void CPUDellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CPUDellActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CPUDellActionPerformed

    private void PlaqueCapacityDellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlaqueCapacityDellActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PlaqueCapacityDellActionPerformed

    private void RAMCapacityDellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RAMCapacityDellActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RAMCapacityDellActionPerformed

    private void PowerSupplyCapacityDellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PowerSupplyCapacityDellActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PowerSupplyCapacityDellActionPerformed

    private void GraphicsCardCapacityDellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GraphicsCardCapacityDellActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GraphicsCardCapacityDellActionPerformed

    private void CPUCapacityDellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CPUCapacityDellActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CPUCapacityDellActionPerformed

    private void PlaqueHPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlaqueHPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PlaqueHPActionPerformed

    private void RAMHPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RAMHPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RAMHPActionPerformed

    private void PowerSupplyHPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PowerSupplyHPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PowerSupplyHPActionPerformed

    private void GraphicsCardHPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GraphicsCardHPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GraphicsCardHPActionPerformed

    private void CPUHPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CPUHPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CPUHPActionPerformed

    private void PlaqueCapacityHPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlaqueCapacityHPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PlaqueCapacityHPActionPerformed

    private void RAMCapacityHPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RAMCapacityHPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RAMCapacityHPActionPerformed

    private void PowerSupplyCapacityHPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PowerSupplyCapacityHPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PowerSupplyCapacityHPActionPerformed

    private void GraphicsCardCapacityHPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GraphicsCardCapacityHPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GraphicsCardCapacityHPActionPerformed

    private void CPUCapacityHPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CPUCapacityHPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CPUCapacityHPActionPerformed

    private void StandardComputerReadyHPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StandardComputerReadyHPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StandardComputerReadyHPActionPerformed

    private void DaysLeftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DaysLeftActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DaysLeftActionPerformed

    private void GraphicsCardComputerReadyHPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GraphicsCardComputerReadyHPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GraphicsCardComputerReadyHPActionPerformed

    private void StandardComputerReadyDellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StandardComputerReadyDellActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StandardComputerReadyDellActionPerformed

    private void GraphicsCardComputerReadyDellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GraphicsCardComputerReadyDellActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GraphicsCardComputerReadyDellActionPerformed

    private void DirectorActivityDellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DirectorActivityDellActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DirectorActivityDellActionPerformed

    private void PMFaultsDellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PMFaultsDellActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PMFaultsDellActionPerformed

    private void PMDiscountDellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PMDiscountDellActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PMDiscountDellActionPerformed

    private void PMActivityDellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PMActivityDellActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PMActivityDellActionPerformed

    private void decreasePlaqueDELLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decreasePlaqueDELLActionPerformed
        // TODO add your handling code here:
         try{
            
            int currentValue = Integer.parseInt(PlaqueProducerDell.getText());
            
            if(currentValue > 0){
                currentValue--;
                PlaqueProducerDell.setText(String.valueOf(currentValue));
            }
            
            
            
        }catch (NumberFormatException e) {
            
            JOptionPane.showMessageDialog(rootPane, "ERROR: La cantidad de trabajadores debe ser un número entero."); 
    }
    }//GEN-LAST:event_decreasePlaqueDELLActionPerformed

    private void decreaseCpuDELLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decreaseCpuDELLActionPerformed
        // TODO add your handling code here:
         try{
            
            int currentValue = Integer.parseInt(CPUProducerDell.getText());
            if(currentValue > 0){
                currentValue--;
                CPUProducerDell.setText(String.valueOf(currentValue));
            }
            
            
            
        }catch (NumberFormatException e) {
            
            JOptionPane.showMessageDialog(rootPane, "ERROR: La cantidad de trabajadores debe ser un número entero."); 
        }
    
        
    }//GEN-LAST:event_decreaseCpuDELLActionPerformed

    private void increasePlaqueDELLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_increasePlaqueDELLActionPerformed
        // TODO add your handling code here:
        
        try{
            
            int currentValue = Integer.parseInt(PlaqueProducerDell.getText());
            currentValue++;
            PlaqueProducerDell.setText(String.valueOf(currentValue));
            
        }catch (NumberFormatException e) {
            
            JOptionPane.showMessageDialog(rootPane, "ERROR: La cantidad de trabajadores debe ser un número entero."); 
        } 
        
    }//GEN-LAST:event_increasePlaqueDELLActionPerformed

    private void AssemblerDellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AssemblerDellActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AssemblerDellActionPerformed

    private void PowerSupplyProducerDellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PowerSupplyProducerDellActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PowerSupplyProducerDellActionPerformed

    private void GraphicsCardProducerDellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GraphicsCardProducerDellActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GraphicsCardProducerDellActionPerformed

    private void PlaqueProducerDellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlaqueProducerDellActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PlaqueProducerDellActionPerformed

    private void CPUProducerDellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CPUProducerDellActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CPUProducerDellActionPerformed

    private void RAMProducerHPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RAMProducerHPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RAMProducerHPActionPerformed

    private void decreasePlaqueHPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decreasePlaqueHPActionPerformed
        // TODO add your handling code here:
        
        try{
            
            int currentValue = Integer.parseInt(PlaqueProducerHP.getText());
            if(currentValue > 0){
                currentValue--;
                PlaqueProducerHP.setText(String.valueOf(currentValue));
            }
            
        }catch (NumberFormatException e) {
            
            JOptionPane.showMessageDialog(rootPane, "ERROR: La cantidad de trabajadores debe ser un número entero."); 
        } 
    }//GEN-LAST:event_decreasePlaqueHPActionPerformed

    private void decreaseCpuHPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decreaseCpuHPActionPerformed
        // TODO add your handling code here:
         try{
            
            int currentValue = Integer.parseInt(CPUProducerHP.getText());
            
            if(currentValue > 0){
                currentValue--;
                CPUProducerHP.setText(String.valueOf(currentValue));    
            }
            
        }catch (NumberFormatException e) {
            
            JOptionPane.showMessageDialog(rootPane, "ERROR: La cantidad de trabajadores debe ser un número entero."); 
        }
    }//GEN-LAST:event_decreaseCpuHPActionPerformed

    private void increasePlaqueHPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_increasePlaqueHPActionPerformed
        // TODO add your handling code here:
        
        try{
            
            int currentValue = Integer.parseInt(PlaqueProducerHP.getText());
            currentValue++;
            PlaqueProducerHP.setText(String.valueOf(currentValue));
            
        }catch (NumberFormatException e) {
            
            JOptionPane.showMessageDialog(rootPane, "ERROR: La cantidad de trabajadores debe ser un número entero."); 
        } 
    }//GEN-LAST:event_increasePlaqueHPActionPerformed

    private void AssemblerHPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AssemblerHPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AssemblerHPActionPerformed

    private void PowerSupplyProducerHPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PowerSupplyProducerHPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PowerSupplyProducerHPActionPerformed

    private void GraphicsCardProducerHPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GraphicsCardProducerHPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GraphicsCardProducerHPActionPerformed

    private void PlaqueProducerHPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlaqueProducerHPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PlaqueProducerHPActionPerformed

    private void CPUProducerHPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CPUProducerHPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CPUProducerHPActionPerformed

    private void increaseCpuDELLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_increaseCpuDELLActionPerformed
        // TODO add your handling code here:
         try{
            
            int currentValue = Integer.parseInt(CPUProducerDell.getText());
            currentValue++;
            CPUProducerDell.setText(String.valueOf(currentValue));
            
        }catch (NumberFormatException e) {
            
            JOptionPane.showMessageDialog(rootPane, "ERROR: La cantidad de trabajadores debe ser un número entero."); 
        }
    }//GEN-LAST:event_increaseCpuDELLActionPerformed

    private void increaseRamDELLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_increaseRamDELLActionPerformed
        // TODO add your handling code here:
         try{
            
            int currentValue = Integer.parseInt(RAMProducerDell.getText());
            currentValue++;
            RAMProducerDell.setText(String.valueOf(currentValue));
            
        }catch (NumberFormatException e) {
            
            JOptionPane.showMessageDialog(rootPane, "ERROR: La cantidad de trabajadores debe ser un número entero."); 
        }
    
    }//GEN-LAST:event_increaseRamDELLActionPerformed

    private void decreaseRamDELLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decreaseRamDELLActionPerformed
        // TODO add your handling code here:
        try{
            
            int currentValue = Integer.parseInt(RAMProducerDell.getText());
            
            if(currentValue > 0){
                currentValue--;
                RAMProducerDell.setText(String.valueOf(currentValue));
            }
            
            
            
        }catch (NumberFormatException e) {
            
            JOptionPane.showMessageDialog(rootPane, "ERROR: La cantidad de trabajadores debe ser un número entero."); 
        }
    }//GEN-LAST:event_decreaseRamDELLActionPerformed

    private void increasePowerSupplyDELLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_increasePowerSupplyDELLActionPerformed
        // TODO add your handling code here:
        try{
            
            int currentValue = Integer.parseInt(PowerSupplyProducerDell.getText());
            currentValue++;
            PowerSupplyProducerDell.setText(String.valueOf(currentValue));
            
        }catch (NumberFormatException e) {
            
            JOptionPane.showMessageDialog(rootPane, "ERROR: La cantidad de trabajadores debe ser un número entero."); 
        }
    }//GEN-LAST:event_increasePowerSupplyDELLActionPerformed

    private void decreasePowerSupplyDELLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decreasePowerSupplyDELLActionPerformed
        // TODO add your handling code here:
        
        try{
            
            int currentValue = Integer.parseInt(PowerSupplyProducerDell.getText());
            
            if(currentValue > 0){
                currentValue--;
                PowerSupplyProducerDell.setText(String.valueOf(currentValue));
            }
            
            
            
        }catch (NumberFormatException e) {
            
            JOptionPane.showMessageDialog(rootPane, "ERROR: La cantidad de trabajadores debe ser un número entero."); 
        }
    }//GEN-LAST:event_decreasePowerSupplyDELLActionPerformed

    private void increaseGraphicsDELLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_increaseGraphicsDELLActionPerformed
        // TODO add your handling code here:
        try{
            
            int currentValue = Integer.parseInt(GraphicsCardProducerDell.getText());
            currentValue++;
            GraphicsCardProducerDell.setText(String.valueOf(currentValue));
            
        }catch (NumberFormatException e) {
            
            JOptionPane.showMessageDialog(rootPane, "ERROR: La cantidad de trabajadores debe ser un número entero."); 
        }
    }//GEN-LAST:event_increaseGraphicsDELLActionPerformed

    private void decreaseGraphicsDELLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decreaseGraphicsDELLActionPerformed
        // TODO add your handling code here:
        try{
            
            int currentValue = Integer.parseInt(GraphicsCardProducerDell.getText());

            if(currentValue > 0){
                
                currentValue--;
                GraphicsCardProducerDell.setText(String.valueOf(currentValue));
                
            }
            
            
        }catch (NumberFormatException e) {
            
            JOptionPane.showMessageDialog(rootPane, "ERROR: La cantidad de trabajadores debe ser un número entero."); 
        }
    }//GEN-LAST:event_decreaseGraphicsDELLActionPerformed

    private void increaseAssemblerDELLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_increaseAssemblerDELLActionPerformed
        // TODO add your handling code here:
        try{
            
            int currentValue = Integer.parseInt(AssemblerDell.getText());
            currentValue++;
            AssemblerDell.setText(String.valueOf(currentValue));
            
        }catch (NumberFormatException e) {
            
            JOptionPane.showMessageDialog(rootPane, "ERROR: La cantidad de trabajadores debe ser un número entero."); 
        }
    }//GEN-LAST:event_increaseAssemblerDELLActionPerformed

    private void decreaseAssemblerDELLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decreaseAssemblerDELLActionPerformed
        // TODO add your handling code here:
        try{
            
            int currentValue = Integer.parseInt(AssemblerDell.getText());
            
            if(currentValue > 0){
                currentValue--;
                AssemblerDell.setText(String.valueOf(currentValue));
            }
            
        }catch (NumberFormatException e) {
            
            JOptionPane.showMessageDialog(rootPane, "ERROR: La cantidad de trabajadores debe ser un número entero."); 
        }
    }//GEN-LAST:event_decreaseAssemblerDELLActionPerformed

    private void increaseCpuHPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_increaseCpuHPActionPerformed
        // TODO add your handling code here:
        try{
            
            int currentValue = Integer.parseInt(CPUProducerHP.getText());
            currentValue++;
            CPUProducerHP.setText(String.valueOf(currentValue));
            
        }catch (NumberFormatException e) {
            
            JOptionPane.showMessageDialog(rootPane, "ERROR: La cantidad de trabajadores debe ser un número entero."); 
        }
   
    }//GEN-LAST:event_increaseCpuHPActionPerformed

    private void increaseRamHPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_increaseRamHPActionPerformed
        // TODO add your handling code here:
        try{
            
            int currentValue = Integer.parseInt(RAMProducerHP.getText());
            currentValue++;
            RAMProducerHP.setText(String.valueOf(currentValue));
            
        }catch (NumberFormatException e) {
            
            JOptionPane.showMessageDialog(rootPane, "ERROR: La cantidad de trabajadores debe ser un número entero."); 
        }
    }//GEN-LAST:event_increaseRamHPActionPerformed

    private void decreaseRamHPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decreaseRamHPActionPerformed
        // TODO add your handling code here:
        try{
            
            int currentValue = Integer.parseInt(RAMProducerHP.getText());
            
            if(currentValue > 0){
                currentValue--;
                RAMProducerHP.setText(String.valueOf(currentValue));
            }
            
        }catch (NumberFormatException e) {
            
            JOptionPane.showMessageDialog(rootPane, "ERROR: La cantidad de trabajadores debe ser un número entero."); 
        }
    }//GEN-LAST:event_decreaseRamHPActionPerformed

    private void increasePowerSupplyHPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_increasePowerSupplyHPActionPerformed
        // TODO add your handling code here:
        try{
            
            int currentValue = Integer.parseInt(PowerSupplyProducerHP.getText());
            currentValue++;
            PowerSupplyProducerHP.setText(String.valueOf(currentValue));
            
        }catch (NumberFormatException e) {
            
            JOptionPane.showMessageDialog(rootPane, "ERROR: La cantidad de trabajadores debe ser un número entero."); 
        }
    }//GEN-LAST:event_increasePowerSupplyHPActionPerformed

    private void decreasePowerSupplyHPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decreasePowerSupplyHPActionPerformed
        // TODO add your handling code here:
        try{
            
            int currentValue = Integer.parseInt(PowerSupplyProducerHP.getText());
            if(currentValue > 0){
                currentValue--;
                PowerSupplyProducerHP.setText(String.valueOf(currentValue));
            }
            
            
            
        }catch (NumberFormatException e) {
            
            JOptionPane.showMessageDialog(rootPane, "ERROR: La cantidad de trabajadores debe ser un número entero."); 
        }
    }//GEN-LAST:event_decreasePowerSupplyHPActionPerformed

    private void increaseGraphicsHPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_increaseGraphicsHPActionPerformed
        // TODO add your handling code here:
        
        try{
            
            int currentValue = Integer.parseInt(GraphicsCardProducerHP.getText());
            currentValue++;
            GraphicsCardProducerHP.setText(String.valueOf(currentValue));
            
        }catch (NumberFormatException e) {
            
            JOptionPane.showMessageDialog(rootPane, "ERROR: La cantidad de trabajadores debe ser un número entero."); 
        }
    }//GEN-LAST:event_increaseGraphicsHPActionPerformed

    private void decreaseGraphicsHPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decreaseGraphicsHPActionPerformed
        // TODO add your handling code here:
        try{
            
            int currentValue = Integer.parseInt(GraphicsCardProducerHP.getText());
            
            if(currentValue > 0){
                currentValue--;
                GraphicsCardProducerHP.setText(String.valueOf(currentValue));
            }
            
        }catch (NumberFormatException e) {
            
            JOptionPane.showMessageDialog(rootPane, "ERROR: La cantidad de trabajadores debe ser un número entero."); 
        }
    }//GEN-LAST:event_decreaseGraphicsHPActionPerformed

    private void increaseAssemblerHPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_increaseAssemblerHPActionPerformed
        // TODO add your handling code here:
        try{
            
            int currentValue = Integer.parseInt(AssemblerHP.getText());
            currentValue++;
            AssemblerHP.setText(String.valueOf(currentValue));
            
        }catch (NumberFormatException e) {
            
            JOptionPane.showMessageDialog(rootPane, "ERROR: La cantidad de trabajadores debe ser un número entero."); 
        }
    }//GEN-LAST:event_increaseAssemblerHPActionPerformed

    private void decreaseAssemblerHPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decreaseAssemblerHPActionPerformed
        // TODO add your handling code here:
        try{
            
            int currentValue = Integer.parseInt(AssemblerHP.getText());
            
            if(currentValue > 0){
                currentValue--;
                AssemblerHP.setText(String.valueOf(currentValue));
            }
            
        }catch (NumberFormatException e) {
            
            JOptionPane.showMessageDialog(rootPane, "ERROR: La cantidad de trabajadores debe ser un número entero."); 
        }
    }//GEN-LAST:event_decreaseAssemblerHPActionPerformed

    private void DirectorActivityHPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DirectorActivityHPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DirectorActivityHPActionPerformed

    private void PMFaultsHPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PMFaultsHPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PMFaultsHPActionPerformed

    private void PMDiscountHPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PMDiscountHPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PMDiscountHPActionPerformed

    private void PMActivityHPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PMActivityHPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PMActivityHPActionPerformed

    /**
     * 
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AssemblerDell;
    private javax.swing.JTextField AssemblerHP;
    private javax.swing.JTextField CPUCapacityDell;
    private javax.swing.JTextField CPUCapacityHP;
    private javax.swing.JTextField CPUDell;
    private javax.swing.JTextField CPUHP;
    private javax.swing.JTextField CPUProducerDell;
    private javax.swing.JTextField CPUProducerHP;
    private javax.swing.JTextField DaysLeft;
    private javax.swing.JTextField DirectorActivityDell;
    private javax.swing.JTextField DirectorActivityHP;
    private javax.swing.JTextField GraphicsCardCapacityDell;
    private javax.swing.JTextField GraphicsCardCapacityHP;
    private javax.swing.JTextField GraphicsCardComputerReadyDell;
    private javax.swing.JTextField GraphicsCardComputerReadyHP;
    private javax.swing.JTextField GraphicsCardDell;
    private javax.swing.JTextField GraphicsCardHP;
    private javax.swing.JTextField GraphicsCardProducerDell;
    private javax.swing.JTextField GraphicsCardProducerHP;
    private javax.swing.JTextField PMActivityDell;
    private javax.swing.JTextField PMActivityHP;
    private javax.swing.JTextField PMDiscountDell;
    private javax.swing.JTextField PMDiscountHP;
    private javax.swing.JTextField PMFaultsDell;
    private javax.swing.JTextField PMFaultsHP;
    private javax.swing.JTextField PlaqueCapacityDell;
    private javax.swing.JTextField PlaqueCapacityHP;
    private javax.swing.JTextField PlaqueDell;
    private javax.swing.JTextField PlaqueHP;
    private javax.swing.JTextField PlaqueProducerDell;
    private javax.swing.JTextField PlaqueProducerHP;
    private javax.swing.JTextField PowerSupplyCapacityDell;
    private javax.swing.JTextField PowerSupplyCapacityHP;
    private javax.swing.JTextField PowerSupplyDell;
    private javax.swing.JTextField PowerSupplyHP;
    private javax.swing.JTextField PowerSupplyProducerDell;
    private javax.swing.JTextField PowerSupplyProducerHP;
    private javax.swing.JTextField RAMCapacityDell;
    private javax.swing.JTextField RAMCapacityHP;
    private javax.swing.JTextField RAMDell;
    private javax.swing.JTextField RAMHP;
    private javax.swing.JTextField RAMProducerDell;
    private javax.swing.JTextField RAMProducerHP;
    private javax.swing.JTextField StandardComputerReadyDell;
    private javax.swing.JTextField StandardComputerReadyHP;
    private javax.swing.JButton decreaseAssemblerDELL;
    private javax.swing.JButton decreaseAssemblerHP;
    private javax.swing.JButton decreaseCpuDELL;
    private javax.swing.JButton decreaseCpuHP;
    private javax.swing.JButton decreaseGraphicsDELL;
    private javax.swing.JButton decreaseGraphicsHP;
    private javax.swing.JButton decreasePlaqueDELL;
    private javax.swing.JButton decreasePlaqueHP;
    private javax.swing.JButton decreasePowerSupplyDELL;
    private javax.swing.JButton decreasePowerSupplyHP;
    private javax.swing.JButton decreaseRamDELL;
    private javax.swing.JButton decreaseRamHP;
    private javax.swing.JButton increaseAssemblerDELL;
    private javax.swing.JButton increaseAssemblerHP;
    private javax.swing.JButton increaseCpuDELL;
    private javax.swing.JButton increaseCpuHP;
    private javax.swing.JButton increaseGraphicsDELL;
    private javax.swing.JButton increaseGraphicsHP;
    private javax.swing.JButton increasePlaqueDELL;
    private javax.swing.JButton increasePlaqueHP;
    private javax.swing.JButton increasePowerSupplyDELL;
    private javax.swing.JButton increasePowerSupplyHP;
    private javax.swing.JButton increaseRamDELL;
    private javax.swing.JButton increaseRamHP;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JButton resetValues;
    private javax.swing.JButton startSimulation;
    // End of variables declaration//GEN-END:variables
}
